buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.1")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'docker'


description = "scheduler"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

group = 'asasandocker'
version = '0.0.4-SNAPSHOT'
archivesBaseName = "scheduler"

def javaVersion = JavaVersion.VERSION_1_8

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtime 'org.postgresql:postgresql:42.2.5'

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.9'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'javax.validation:validation-api'
    implementation 'org.liquibase:liquibase-core'

    implementation 'org.hibernate:hibernate-validator:6.0.10.Final'
    implementation 'org.glassfish:javax.el:3.0.1-b10'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:testcontainers:1.15.1'
    testImplementation 'org.testcontainers:postgresql:1.15.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.1'
    testImplementation 'com.icegreen:greenmail-junit5:1.6.1'
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += test.compileClasspath
            runtimeClasspath += test.runtimeClasspath
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = project.archivesBaseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
